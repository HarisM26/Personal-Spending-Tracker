Title: Frontend Manual Testing Report
Project: Void Money Tracker
Date: [Date]
Tester(s): [Name(s) of testers]

1. Introduction
---------------

This front-end manual test report provides an overview of the testing conducted on the 'Void Money Tracker' web application. The primary goal of the Void Money Tracker is to help users track their spending by providing a platform that allows them to easily log transactions and view reports of their spending with limits, set by the user, applied to customisable categories. Additionally, the application incentivises users to use it by offering points for logging transactions and putting users against each other through a league system.

The purpose of the manual testing was to ensure that the application's front-end is functioning correctly and meeting the user's expectations. The report highlights the testing approach, methodology, and results. It also provides an analysis of the application's performance, usability, functionality, and user experience.

The report is intended to provide valuable insights to the development team and stakeholders, highlighting any issues discovered during the testing process and providing recommendations for improvement. It is essential to note that the report focuses solely on the front-end of the application, and back-end testing was not included.

Overall, this report aims to provide a comprehensive evaluation of the front-end of the money tracking web application, ensuring that it is user-friendly, efficient, and reliable.

2. Test Environment
-------------------

The tests in this report have been conducted on the following browsers and operating systems:
- Safari Version 15.6.1 (17613.3.9.1.16) with macOS Monterey Version 12.6.3 with a screen resolution of 2560px x 1600px

3. Test Scenarios
-----------------

For all test scenarios, the objectives of the Homepage also apply.

3.1 Scenarios before user is signed up to service

3.1.1 Homepage
- Verify the layout, design elements, and content
- Check the navigation menu and links
- Test responsiveness on different devices and screen resolutions

3.1.2 User Sign-Up Page
- Check the required fields and field validation
- Test the registration process including successful registration, error handling
- Verify the user receives a confirmation email
- Test the link to the login page
- Verify user is able to use friend referral code to sign up and points are awarded correctly

3.1.3 User Log-In Page
- Check the required fields and field validation
- Test the login process, including successful login, error handling
- Test the link to the registration page and password reset

3.2 Scenarios after user is signed up to service but not logged in

3.2.1 Reset Password Page
- Check the required fields and field validation
- Test the password reset request process, including successful request submission and error handling
- Verify the user receives a password reset email with a unique reset link

3.2.2 Reset Password Sent Page
- Verify the layout, design elements, and content

3.2.3 Reset Password Email
- Verify the email content, including subject, sender, and recipient
- Check the email contains a unique password reset link with a valid expiration time
- Test the password reset link by clicking on it and confirming it redirects to the Password Reset Confirm page

3.2.4 Reset Password Confirm Page
- Check the required fields and field validation (new password and password confirmation)
- Test the password reset process, including successful password reset, error handling, and expired reset link handling
- Verify the user is redirected to the Password Reset Complete page upon successful password reset

3.2.5 Password Reset Complete Page
- Check the presence of a confirmation message indicating a successful password reset
- Test the link to the login page and other related pages

3.3 Scenarios after user is logged into service

3.3.0 Logged-in Pages:
- Verify the layout, and design elements are consistent for all logged in pages.

3.3.1 Notifications
- Verify the layout, design elements and content for all natification pages.
- Check links from notifications take user to correct place.
- Verify the user receives and can access notifications when notifications are received

3.3.2 Profile Page
- Verify the layout, design elements and content
- Verify user is able to view and edit their profile
- Check forms for editing user profile information and field validation.
- Verify user can delete their account

3.3.3 Settings Page
- Verify the layout, design elements and content
- Verify user can use toggles on settings to change their settings
- Verify user settings are updated and behave correctly

3.3.4 User Dashboard
- Verify user can easily add transactions using the quick add feauture
- Check the required fields and field validation for quick add feauture
- Test user can view a brief of notifications if any received
- Check that user can log out from service

3.3.5 User Spending
- Verify user can create, edit and delete relevant spending categories
- Verify user can create, view, edit and delete transaction in spending categories
- Check the required fields and field validation

3.3.6 User Income
- Verify user can create, edit and delete income categories
- Verify user can create, view, edit and delete transaction in income categories
- Check the required fields and field validation

3.3.7 User Reports
- Check the required fields and field validation
- Verify user can use fields provided to generate accurate reports

3.3.8 User Friends
- Check user can search for and add friends
- Verify user is able to see their Friends
- Check user can see their friends' profile
- Check user is able to view their own profile

3.3.9 User Leaderboard
- Verify podium and leaderboard is accurate
- Check that user is able to see their position in the leaderboard

3.3.10 User Logout
- Verify that user can use buttons and links on pages to log out from service


4. Test Cases and Results
-------------------------

4.1.1 Homepage Scenario ----------------------------------------------------------------

-- Test Case 1: Home Page - Layout and Design Elements --
Description:
    Objective: Verify that the home page has the correct layout and design elements.
    Test Scenario: Home Page

Steps to Reproduce:
    Open the web application and navigate to the home page.
    Check the presence of the following elements:
        Navigation bar with logo, product name, "Home" link, "About" link, "News" link, "Contact" link, "Login" link and "Get Started" link
        "Home" section with product name, slogan, "Login" and "Get Started" buttons
        "About Us" section with image, "What we do" and "Who we are" text
        "News" section with swiper cards with news article title, source, date of publication and "View article" button
        "Contact" section with Information about Enquiries and Techinical Support
        Swiper cards in the news section with article titles and links

Expected Results:
    The home page contains all the required elements with the correct design and positioning.

Actual Results:
    The home page contains all the required elements with the correct design and positioning.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 2: Home Page - Navigation Bar Links Functionality --
Description:
    Objective: Verify that all navigation links on the home page function correctly.
    Test Scenario: Home Page

Steps to Reproduce:
    Open the web application and navigate to the home page.
    Click the "Home" link, product name or logo in the navigation bar and verify it takes the user to the top of the home page.
    Click the "About" link in the navigation barand verify it takes the user to the about section on the home page.
    Click the "News" link in the navigation barand verify it takes the user to the news section on the home page.
    Click the "Contact" link in the navigation barand verify it takes the user to the contact section on the home page.
    Click the "Login" link in the navigation barand verify it takes the user to the login page.
    Click the "Get Started" link in the navigation barand verify it takes the user to the sign-up page.

Expected Results:
    All navigation links work correctly and take the user to the appropriate sections or pages.

Actual Results:
    All navigation links work correctly and take the user to the appropriate sections or pages.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 3: Home Page - News Swiper Cards Functionality --
Description:
    Objective: Verify that the swiper cards in the news section function correctly and link to the appropriate news articles.
    Test Scenario: Home Page

Steps to Reproduce:
    Open the web application and navigate to the home page.
    Scroll to the news section and interact with the swiper cards, checking the following:
        The swiper cards can be swiped or navigated through.
        The article titles, source and publication date are displayed correctly on the cards.
        The cards contain links to the corresponding news articles.
    Click the links on the swiper cards and verify that they take the user to the correct news articles.

Expected Results:
    The swiper cards in the news section function correctly and take the user to the appropriate news articles when the links are clicked.

Actual Results:
    The swiper cards in the news section function correctly and take the user to the appropriate news articles when the links are clicked.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.1.2 User Sign-up Page Scenario ----------------------------------------------------------------

-- Test Case 4: Sign-up Page - Layout and Design Elements --
Description:
    Objective: Verify that the sign-up page has the correct layout and design elements.
    Test Scenario: User Sign-Up Page

Steps to Reproduce:
    Open the web application and navigate to the sign-up page.
    Check the presence of the following elements:
        Navigation bar with logo, product name, "Home" link, "Login" link and "Get Started" link
        Page title
        First name field
        Last Name field
        Email field
        Password field
        Password confirmation field
        Reference Code
        Sign-up button (Register)
        Log-in link

Expected Results:
    The sign-up page contains all the required elements with the correct design and positioning.

Actual Results:
    The sign-up page contains all the required elements with the correct design and positioning.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 5: Sign-up Page - Successful Registration without Reference Code--
Description:
    Objective: Verify that a user can successfully register with valid information.
    Test Scenario: User Sign-Up Page

Steps to Reproduce:
    Open the web application and navigate to the sign-up page.
    Enter valid information into all required fields (first name, last name, email, password, and password confirmation).
    Leave the reference code field empty.
    Click the sign-up button.

Expected Results:
    The user is successfully registered and redirected to the dashboard. An email should be sent to the user welcoming them to the platform.

Actual Results:
    The user is successfully registered and redirected to the dashboard. An email should be sent to the user welcoming them to the platform.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 6: Referral Code Field - Successful Registration with Reference Code --
Description:
    Objective: Verify that a user can successfully register with a valid referral code.
    Test Scenario: User Sign-Up Page

Steps to Reproduce:
    Open the web application and navigate to the sign-up page.
    Enter valid information into all required fields (full name, email, password, and password confirmation).
    Enter a valid reference code into the reference code field.
    Click the sign-up button.

Expected Results:
    The user is successfully registered and the reference code is processed accordingly (user with reference code is awarded extra points).

Actual Results:
    The user is successfully registered and the reference code is processed accordingly (user with reference code is awarded extra points).

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 7: Sign-up Page - Field Validation --
Description:
    Objective: Verify that proper validation is in place for each required input field, and error messages are displayed when incorrect information is entered.
    Test Scenario: User Sign-Up Page

Steps to Reproduce:
    Open the web application and navigate to the sign-up page.
    Test each field by entering incorrect or incomplete information (e.g., invalid email format, password too short, mismatched passwords).
    Click the sign-up button.

Expected Results:
    An error message is displayed for each field with incorrect or incomplete information, indicating the specific issue.

Actual Results:
    An error message is displayed for each field with incorrect or incomplete information, indicating the specific issue.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 8: Sign-up Page - Empty Fields and Validation --
Description:
    Objective: Verify that validation is in place for empty fields and error messages are displayed when a user attempts to register with empty fields.
    Test Scenario: User Sign-Up Page

Steps to Reproduce:
    Open the web application and navigate to the sign-up page.
    Leave one or more required fields empty.
    Click the sign-up button.

Expected Results:
    An error message is displayed for each empty field, indicating that the field cannot be empty.

Actual Results:
    An error message is displayed for each empty field, indicating that the field cannot be empty.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 9: Sign-up Page - Invalid Reference Code Error --
Description:
    Objective: Verify that an error message is displayed when a user enters an invalid reference code.
    Test Scenario: User Sign-Up Page

Steps to Reproduce:
    Open the web application and navigate to the sign-up page.
    Enter valid information into all required fields (full name, email, password, and password confirmation).
    Enter an invalid reference code into the reference code field.
    Click the sign-up button.

Expected Results:
    An error message is displayed, indicating that the provided reference code is invalid.

Actual Results:
    An error message is displayed, indicating that the provided reference code is invalid.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 10: Sign-up Page - Log-in Link --
Description:
    Objective: Verify that the Log-in link navigates to the correct page.
    Test Scenario: User Sign-Up Page

Steps to Reproduce:
    Open the web application and navigate to the sign-up page.
    Click the Log-in link.

Expected Results:
    The Log-in link navigates to the User Log-In page.

Actual Results:
    The Log-in link navigates to the User Log-In page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 11: Sign-up Page - Duplicate Email --
Description:
    Objective: Verify that an error message is displayed when a user attempts to register with an email that is already in use.
    Test Scenario: User Sign-Up Page

Steps to Reproduce:
    Open the web application and navigate to the sign-up page.
    Enter an email that is already registered in the system.
    Complete the other required fields with valid information.
    Click the sign-up button.

Expected Results:
    An error message is displayed, indicating that the email is already in use.

Actual Results:
    An error message is displayed, indicating that the email is already in use.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.1.3 User Log-In Page Scenario ----------------------------------------------------------------

-- Test Case 12: Log-In Page - Layout and Design Elements --
Description:
Objective: Verify that the log-in page has the correct layout and design elements.
Test Scenario: User Log-In Page

Steps to Reproduce:
1. Open the web application and navigate to the log-in page.
2. Check the presence of the following elements:
    Navigation bar with logo, product name, "Home" link, "Login" link and "Get Started" link
  - Page title
  - Email field
  - Password field
  - Login button
  - Forgot password link
  - Sign-up link (Get started)

Expected Results:
  - The log-in page contains all the required elements with the correct design and positioning.

Actual Results:
  - The log-in page contains all the required elements with the correct design and positioning.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 13: Log-in Page - Successful Log-in --
Description:
    Objective: Verify that a user can successfully log in with valid credentials.
    Test Scenario: User Log-In Page

Steps to Reproduce:
    Open the web application and navigate to the log-in page.
    Enter a valid username/email and password.
    Click the log-in button.

Expected Results:
- The user is successfully logged in and redirected to the appropriate page (e.g., dashboard or homepage).

Actual Results:
- The user is successfully logged in and redirected to the appropriate page (e.g., dashboard or homepage).

Pass/Fail:
[PASS]


Comments:
[Any additional comments or observations]

-- Test Case 14: Log-in Page - Invalid email --
Description:
    Objective: Verify that an error message is displayed when a user attempts to log in with an invalid email.
    Test Scenario: User Log-In Page

Steps to Reproduce:
    Open the web application and navigate to the log-in page.
    Enter an invalid email and random password.
    Click the log-in button.

Expected Results:
- An error message is displayed, indicating that the provided credentials are incorrect.

Actual Results:
- An error message is displayed, indicating that the provided credentials are incorrect.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 15: Log-in Page - Invalid password --
Description:
Objective: Verify that an error message is displayed when a user attempts to log in with an invalid password.
Test Scenario: User Log-In Page

Steps to Reproduce:
1. Open the web application and navigate to the log-in page.
2. Enter a Enter a valid, registered email and incorrect password.
3. Click the log-in button.

Expected Results:
- An error message is displayed, indicating that the provided credentials are incorrect.

Actual Results:
- An error message is displayed, indicating that the provided credentials are incorrect.

Pass/Fail:
[PASS]


Comments:
[Any additional comments or observations]

-- Test Case 16: Log-in Page - Empty Fields and Validation --
Description:
    Objective: Verify that validation is in place for empty fields and an error message is displayed when a user attempts to log in with empty fields.
    Test Scenario: User Log-In Page

Steps to Reproduce:
    Open the web application and navigate to the log-in page.
    Leave the email and/or password fields empty. (Repeat test with all combinations)
    Click the log-in button.

Expected Results:
- For each combination an error message is displayed, indicating that the email and password fields cannot be empty.

Actual Results:
- For each combination an error message is displayed, indicating that the email and password fields cannot be empty.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 17: Log-in Page - Forgot Password and Sign-Up Links --
Description:
Objective: Verify that the Forgot Password and Sign-Up links navigate to the correct pages.
Test Scenario: User Log-In Page

Steps to Reproduce:
    Open the web application and navigate to the log-in page.
    Click the Forgot Password link and verify it navigates to the Password Reset page.
    Click the Sign-Up link and verify it navigates to the User Sign-Up page.

Expected Results:
    The Forgot Password link navigates to the Password Reset Request page.
    The Sign-Up link navigates to the User Sign-Up page.

Actual Results:
    The Forgot Password link navigates to the Password Reset Request page.
    The Sign-Up link navigates to the User Sign-Up page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.2.1 Reset Password Page Scenario ----------------------------------------------------------------

-- Test Case 18: Reset Password Page - Layout and Design Elements ---
Description:
    Objective: Verify that the Reset Password page has the correct layout and design elements.
    Test Scenario: Reset Password Page

Steps to Reproduce:
    Open the web application and navigate to the Reset Password page.
    Check the presence of the following elements:
        Page title
        Email field
        Send button

Expected Results:
    The Reset Password page contains all the required elements with the correct design and positioning. An email should be sent to the user with further instructions on how to reset the password.

Actual Results:
    The Reset Password page contains all the required elements with the correct design and positioning. An email should be sent to the user with further instructions on how to reset the password.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 19: Reset Password Page - Request Password Reset --
Description:
    Objective: Verify that a user can successfully request a password reset with a valid email address.
    Test Scenario: Reset Password Page

Steps to Reproduce:
    Open the web application and navigate to the Reset Password page.
    Enter a valid email address associated with a registered account.
    Click the Reset Password button.

Expected Results:
    The user is redirected to the Reset Password Sent page.

Actual Results:
    The user is redirected to the Reset Password Sent page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 20: Reset Password Page - Invalid Email Address Handling --
Description:
    Objective: Verify that an email is not sent when a user enters an invalid email address.
    Test Scenario: Reset Password Page

Steps to Reproduce:
    Open the web application and navigate to the Reset Password page.
    Enter an invalid email address (not associated with any registered account).
    Click the Send button.

Expected Results:
    The user is redirected to the Reset Password Sent page. The user does not receive an email at the address entered.

Actual Results:
    The user is redirected to the Reset Password Sent page. The user does not receive an email at the address entered.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.2.2 Reset Password Sent Page Scenario ----------------------------------------------------------------

-- Test Case 21: Reset Password Sent Page - Layout and Design Elements --
Description:
    Objective: Verify that the Reset Password Sent page has the correct layout and design elements.
    Test Scenario: Reset Password Sent Page

Steps to Reproduce:
    Request a password reset for a valid email address (as described in Test Case 19).
    Check the presence of the following elements on the Reset Password Sent page:
        Page title
        Confirmation message
        Instructions for user to reset the password

Expected Results:
    The Reset Password Sent page contains all the required elements with the correct design and positioning.

Actual Results:
    The Reset Password Sent page contains all the required elements with the correct design and positioning.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.2.3 Reset Password Email Scenario ----------------------------------------------------------------

-- Test Case 21.1: Reset Password Email - Content and Functionality --
Description:
    Objective: Verify that the reset password email has the correct content and functionality.
    Test Scenario: Reset Password Email

Steps to Reproduce:
    Request a password reset for a valid email address (as described in Test Case 19).
    Check the user's email inbox for the reset password email.
    Verify the following elements in the email:
        Sender email address
        Subject line
        Email body content (including instructions and reset password link)
    Click the reset password link in the email.

Expected Results:
    The reset password email is sent from the correct sender email address.
    The subject line is appropriate and clear.
    The email body contains instructions and a reset password link.
    The reset password link takes the user to the Reset Password Confirm page.

Actual Results:
    The reset password email is sent from the correct sender email address.
    The subject line is appropriate and clear.
    The email body contains instructions and a reset password link.
    The reset password link takes the user to the Reset Password Confirm page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.2.4 Reset Password Confirm Page Scenario ----------------------------------------------------------------

-- Test Case 22: Reset Password Confirm Page - Layout and Design Elements --
Description:
    Objective: Verify that the Reset Password Confirm page has the correct layout and design elements.
    Test Scenario: Reset Password Confirm Page

Steps to Reproduce:
    Access the password reset link sent to the user's email address.
    Check the presence of the following elements on the Reset Password Confirm page:
        Page title
        New password field
        Confirm new password field
        Change password button

Expected Results:
    The Reset Password Confirm page contains all the required elements with the correct design and positioning.

Actual Results:
    The Reset Password Confirm page contains all the required elements with the correct design and positioning.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 23: Reset Password Confirm Page - Successful Password Reset --
Description:
    Objective: Verify that a user can successfully reset their password with valid new password and confirmation password.
    Test Scenario: Reset Password Confirm Page

Steps to Reproduce:
    Access the password reset link sent to the user's email address.
    Enter a valid new password in the New password field.
    Enter the same password in the Confirm new password field.
    Click the Change Password button.

Expected Results:
    The user's password is successfully reset, and they are redirected to the Password Reset Complete page.

Actual Results:
    The user's password is successfully reset, and they are redirected to the Password Reset Complete page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 24: Reset Password Confirm Page - Mismatched Passwords Error --
Description:
    Objective: Verify that an error message is displayed when a user enters mismatched passwords.
    Test Scenario: Reset Password Confirm Page

Steps to Reproduce:
    Access the password reset link sent to the user's email address.
    Enter a valid new password in the New password field.
    Enter a different password in the Confirm new password field.
    Click the Change Password button.

Expected Results:
    An error message is displayed, indicating that the entered passwords do not match.

Actual Results:
    An error message is displayed, indicating that the entered passwords do not match.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.2.5 Password Reset Complete Page Scenario ----------------------------------------------------------------

-- Test Case 25: Password Reset Complete Page - Layout and Design Elements --
Description:
    Objective: Verify that the Password Reset Complete page has the correct layout and design elements.
    Test Scenario: Password Reset Complete Page

Steps to Reproduce:
    Successfully reset the user's password (as described in Test Case 23).
    Check the presence of the following elements on the Password Reset Complete page:
        Page title
        Confirmation message
        Login button

Expected Results:
    The Password Reset Complete page contains all the required elements with the correct design and positioning.

Actual Results:
    The Password Reset Complete page contains all the required elements with the correct design and positioning.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.3.0 Logged-in Pages Scenario ----------------------------------------------------------------

-- Test Case 26: Logged-in Pages - Layout and Design Elements --
Description:
    Objective: Verify that all pages accessible after logging in have the correct layout and design elements.
    Test Scenario: Logged-in Pages 

Steps to Reproduce:
    Log in to the web application with valid credentials.
    For each page accessible after logging in, check the presence of the following elements:
        Page title
        Navigation bar with logo, product name, notification bell icon, user account icon, points display, and user's first name
        Side bar with the option to open/close it, containing links to Dashboard, Spending, Income, Reports, Friends, Leaderboard pages, and a log out link
        Path displayed for navigation between pages

Expected Results
    All pages accessible after logging in contain the required elements with the correct design and positioning.

Actual Results:
    All pages accessible after logging in contain the required elements with the correct design and positioning.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 27: Navigation Bar Functionality --
Description:
    Objective: Verify that the navigation bar functions correctly in all logged-in pages.
    Test Scenario: Logged-in Pages 

Steps to Reproduce:
    Log in to the web application with valid credentials.
    For each page accessible after logging in, perform the following actions:
        Click on the logo and/or product name and verify that it takes the user to the Dashboard page.
        Click on the notification bell icon and verify that it displays a drop-down menu with notification names and a "See all notifications" link.
        Click on a notification name and verify that it takes the user to the View Notification page for that notification.
        Click on the "See all notifications" link and verify that it takes the user to the All Notifications page.
        Click on the user account icon and verify that it displays a drop-down menu with links to Profile, Settings, and log out.
        Click on the Profile link and verify that it takes the user to the Profile page.
        Click on the Settings link and verify that it takes the user to the Settings page.
        Verify that the user's points and first name are displayed correctly.

Expected Results:
    The navigation bar functions correctly on all logged-in pages, with all elements working as described.

Actual Results:
    The navigation bar functions correctly on all logged-in pages, with all elements working as described.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 28: Side Bar Functionality --
Description:
    Objective: Verify that the side bar functions correctly in all logged-in pages.
    Test Scenario: Logged-in Pages 

Steps to Reproduce:
    Log in to the web application with valid credentials.
    For each page accessible after logging in, perform the following actions:
        Open and close the side bar, verifying that the icons and link names are displayed correctly in both states.
        Click on the links to Dashboard, Spending, Income, Reports, Friends, and Leaderboard pages, verifying that they navigate to the respective pages.
        Click on the log out link and verify that the user is logged out.

Expected Results:
    The side bar functions correctly on all logged-in pages, with all elements working as described.

Actual Results:
    The side bar functions correctly on all logged-in pages, with all elements working as described.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.3.1 Notifications Scenario ----------------------------------------------------------------

-- Test Case 29: All Notifications Page Functionality --
Description:
    Objective: Verify that the All Notifications page functions correctly and displays the correct information.
    Test Scenario: Notifications

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the All Notifications page.
    Verify that the path displayed is "Home/All Notifications".
    Check that the All Notifications page displays a list of all notifications received with the name, message, date received, and whether it was read by the user.
    Click on a notification and verify that it takes the user to the View Notification page for that notification.

Expected Results:
    The All Notifications page functions correctly and displays the correct information as described.

Actual Results:
    The All Notifications page functions correctly and displays the correct information as described.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 30: View Notification Page Functionality --
Description:
    Objective: Verify that the View Notification page functions correctly and displays the correct information.
    Test Scenario: Notifications

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the View Notification page for a specific notification (either from the All Notifications page or from the notification drop-down menu).
    Verify that the path displayed is "Home/All Notifications/View Notification".
    Check that the View Notification page displays the notification's name, message, date received, and whether it was read by the user.
    Click Close and verify that it takes the user to the All Notifications page or follow the link to the related page (e.g., Spending page for a limit reached notification).

Expected Results:
    The View Notification page functions correctly and displays the correct information as described.

Actual Results:
    The View Notification page functions correctly and displays the correct information as described.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.3.2 Profile Page Scenario ----------------------------------------------------------------

-- Test Case 31: Profile Page Functionality --
Description:
    Objective: Verify that the Profile page functions correctly and displays the correct information.
    Test Scenario: Profile Page

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Profile page.
    Verify that the path displayed is "Home/Profile".
    Check that the Profile page displays the user's reference code, first and last names, and email address in an editable form, as well as a "Delete Account" button.
    Click on the "Delete Account" button and verify that a pop-up dialog appears to confirm the action.

Expected Results:
    The Profile page functions correctly and displays the correct information as described.

Actual Results:
    The Profile page functions correctly and displays the correct information as described.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.3.3 Settings Page Scenario ----------------------------------------------------------------

-- Test Case 32: Settings Page Functionality --
Description:
    Objective: Verify that the Settings page functions correctly and displays the correct information.
    Test Scenario: Settings Page

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Settings page.
    Verify that the path displayed is "Home/Settings".
    Check that the Settings page displays toggles for notification settings, privacy settings, and email settings.
    Turn off notification settings and verify that the user does not receive notifications.
    Turn on privacy settings and verify that the user's profile is not visible to other users.
    Turn off email settings and verify that the user does not receive email notifications.

Expected Results:
    The Settings page functions correctly and displays the correct information as described.

Actual Results:
    The Settings page functions correctly and displays the correct information as described.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.3.4 User Dashboard Scenario ----------------------------------------------------------------

-- Test Case 33: Dashboard Page Layout and Design --
Description:
    Objective: Verify that the Dashboard page functions correctly and displays the correct information.
    Test Scenario: User Dashboard

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Dashboard page.
    Verify that the path displayed is "Home/Dashboard".
    Check that the Dashboard page displays the user's points, total spent, "budget remaining", "total categories within limit", total income, and a chart to show data about user income.
    Verify that the Dashboard page has a news section displaying the 4 most recent news articles.

Expected Results:
    The Dashboard page functions correctly and displays the correct information as described.

Actual Results:
    The Dashboard page functions correctly and displays the correct information as described.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 34: Quick Add Functionality on Dashboard Page --
Description:
    Objective: Verify that the user can use the "Quick Add" button on the Dashboard page to add a transaction.
    Test Scenario: User Dashboard

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Dashboard page.
    Click on the "Quick Add" button to open the quick add form.
    Fill in the required fields (amount and spending category) and submit the form.
    Verify that the transaction is added to the selected category on the Spending page.

Expected Results:
    The user can use the "Quick Add" button on the Dashboard page to add a transaction.

Actual Results:
    The user can use the "Quick Add" button on the Dashboard page to add a transaction.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.3.5 User Spending Scenario ----------------------------------------------------------------

-- Test Case 35: Spending Page Display and Navigation --
Description:
    Objective: Verify that the Spending Page is displayed correctly and that the user can navigate to it.
    Test Scenario: User Spending

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Spending page.
    Verify that the path displayed is "Home/Spending".

Expected Results:
    The Spending page is displayed correctly and the user can navigate to it.

Actual Results:
    The Spending page is displayed correctly and the user can navigate to it.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 36: Spending Page Default Categories --
Description:
    Objective: Verify that the default spending categories are displayed on the Spending page.
    Test Scenario: User Spending

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Spending page.
    Check that the default categories "General", "Groceries", "Transport", and "Utilities" are displayed.

Expected Results:
    The default spending categories are displayed on the Spending page.

Actual Results:
    The default spending categories are displayed on the Spending page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 37: Spending Page Create New Category --
Description:
    Objective: Verify that the user can create a new spending category on the Spending page.
    Test Scenario: User Spending 

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Spending page.
    Click the "Create new category" button.
    Verify that the user is taken to the "Create Category" page.

Expected Results:
    The user can create a new spending category on the Spending page.

Actual Results:
    The user can create a new spending category on the Spending page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 38: Spending Page Category Transactions --
Description:
    Objective: Verify that the user can view and interact with transactions within a spending category on the Spending page.
    Test Scenario: User Spending

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Spending page.
    Click on a spending category to display the transactions list.
    Verify that the transactions are displayed correctly, including date created, title, points awarded, and buttons to edit and remove the transaction.
    Click on a transaction to open the modal dialog with transaction details.

Expected Results:
    The user can view and interact with transactions within a spending category on the Spending page.

Actual Results:
    The user can view and interact with transactions within a spending category on the Spending page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 39: Spending Page Create and Edit Transactions --
Description:
    Objective: Verify that the user can create and edit transactions on the Spending page.
    Test Scenario: User Spending 

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Spending page.
    Click on the "Add Transaction" button for a category.
    Verify that the user is taken to the "Add Transaction" page.
    Fill in the required fields and submit the form.
    Verify that the new transaction is added to the category.
    Click on the "Edit" button for the created transaction.
    Verify that the user is taken to the "Edit Spending Transaction" page.
    Edit the transaction details and submit the form.
    Verify that the transaction is updated with the new information.

Expected Results:
    The user can create and edit transactions on the Spending page.

Actual Results:
    The user can create and edit transactions on the Spending page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 40: Spending Page Delete Category and Transaction --
Description:
    Objective: Verify that the user can delete a category and transaction on the Spending page.
    Test Scenario: User Spending

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Spending page.
    Click on the "Remove Category" button for a user-created category.
    Verify that the user is taken to the "Delete Category" page.
    Click the confirm button to delete the category.
    Verify that the category is removed from the Spending page.
    Click on a transaction's "Remove" button.
    Confirm the deletion in the pop-up dialog.
    Verify that the transaction is removed from the category.

Expected Results:
    The user can delete a category and transaction on the Spending page.

Actual Results:
    The user can delete a category and transaction on the Spending page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 41: Create Spending Category Page Functionality --
Description:
    Objective: Verify that the user can create a new spending category on the Create Spending Category page.
    Test Scenario: User Spending

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Spending page.
    Click the "Create new category" button.
    Fill in the required fields (name, limit amount, and time limit type) and submit the form.
    Verify that the new category is added to the Spending page.

Expected Results:
    The user can create a new spending category on the Create Spending Category page.

Actual Results:
    The user can create a new spending category on the Create Spending Category page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 42: Edit Spending Category Page Functionality --
Description:
    Objective: Verify that the user can edit an existing spending category on the Edit Spending Category page.
    Test Scenario: User Spending

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Spending page.
    Click the "Edit" button for an existing category.
    Modify the category details (name, limit amount, and time limit type) and submit the form.
    Verify that the category is updated with the new information on the Spending page.

Expected Results:
    The user can edit an existing spending category on the Edit Spending Category page.

Actual Results:
    The user can edit an existing spending category on the Edit Spending Category page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 43: Delete Category Page Functionality --
Description:
    Objective: Verify that the user can delete a category on the Delete Category page.
    Test Scenario: User Spending

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Spending page.
    Click on the "Remove Category" button for a user-created category.
    Confirm the deletion on the Delete Category page.
    Verify that the category is removed from the Spending page.

Expected Results:
    The user can delete a category on the Delete Category page.

Actual Results:
    The user can delete a category on the Delete Category page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 44: Add Transaction Page Functionality --
Description:
    Objective: Verify that the user can add a transaction on the Add Transaction page.
    Test Scenario: User Spending

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Spending page.
    Click on the "Add Transaction" button for a category.
    Fill in the required fields (title, date created, amount, notes, and upload a receipt) and submit the form.
    Verify that the transaction is added to the category on the Spending page.

Expected Results:
    The user can add a transaction on the Add Transaction page.

Actual Results:
    The user can add a transaction on the Add Transaction page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 45: Edit Transaction Page Functionality --
Description:
    Objective: Verify that the user can edit a transaction on the Edit Transaction page.
    Test Scenario: User Spending

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Spending page.
    Click on the "Edit" button for a transaction.
    Modify the transaction details (title, date created, amount, notes, and upload a new receipt) and submit the form.
    Verify that the transaction is updated with the new information on the Spending page.

Expected Results:
    The user can edit a transaction on the Edit Transaction page.

Actual Results:
    The user can edit a transaction on the Edit Transaction page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 46: Delete Transaction Functionality --
Description:
    Objective: Verify that the user can delete a transaction from a spending category.
    Test Scenario: User Spending

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Spending page.
    Click on the "Remove" button for a transaction.
    Confirm the deletion in the pop-up dialog.
    Verify that the transaction is removed from the category on the Spending page.

Expected Results:
    The user can delete a transaction from a spending category.

Actual Results:
    The user can delete a transaction from a spending category.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 47: View Transaction Details in Modal Dialog --
Description:
    Objective: Verify that the user can view transaction details in a modal dialog.
    Test Scenario: User Spending

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Spending page.
    Click on a transaction in the drop-down menu of a category.
    Verify that the modal dialog displays the transaction details (title, points awarded, date and time created, amount, category, notes, and receipt).
    Close the modal dialog by clicking the "Close" button.

Expected Results:
    The user can view transaction details in a modal dialog.

Actual Results:
    The user can view transaction details in a modal dialog.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.3.6 User Income Scenario ----------------------------------------------------------------

-- Test Case 48: Income Page Functionality --
Description:
    Objective: Verify that the Income page displays the user's income categories and allows the user to add, edit, and delete categories and transactions.
    Test Scenario: User Income

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Income page.
    Verify that the user can see their income categories.
    Verify that the user can add a new income category, edit an existing category, and delete a category.
    Verify that the user can add, edit, and delete transactions for each income category.

Expected Results:
    The Income page displays the user's income categories and allows the user to add, edit, and delete categories and transactions.

Actual Results:
    The Income page displays the user's income categories and allows the user to add, edit, and delete categories and transactions.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 49: Create Incoming Category Page Functionality --
Description:
    Objective: Verify that the user can create a new incoming category on the Create Incoming Category page.
    Test Scenario: User Income 

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Income page.
    Click on the "Create new category" button.
    Verify that the user is redirected to the "Create Incoming Category" page.
    Fill in the required fields and submit the form.
    Verify that the new category is added to the Income page.

Expected Results:
    The user can create a new incoming category on the Create Incoming Category page.

Actual Results:
    The user can create a new incoming category on the Create Incoming Category page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 50: Edit Incoming Category Page Functionality --
Description:
    Objective: Verify that the user can edit an existing incoming category on the Edit Incoming Category page.
    Test Scenario: User Income

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Income page.
    Click on the edit button for an existing category.
    Verify that the user is redirected to the "Edit Incoming Category" page.
    Make changes to the category and submit the form.
    Verify that the changes are reflected on the Income page.

Expected Results:
    The user can edit an existing incoming category on the Edit Incoming Category page.

Actual Results:
    The user can edit an existing incoming category on the Edit Incoming Category page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 51: Add Income Transaction Functionality --
Description:
    Objective: Verify that the user can add an income transaction on the Add Income Transaction page.
    Test Scenario: User Income 

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Income page.
    Click on the add transaction button for an existing category.
    Verify that the user is redirected to the "Add Income Transaction" page.
    Fill in the required fields and submit the form.
    Verify that the new transaction is added to the selected category on the Income page.

Expected Results:
    The user can add an income transaction on the Add Income Transaction page.

Actual Results
    The user can add an income transaction on the Add Income Transaction page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 52: Edit Income Transaction Functionality --
Description:
    Objective: Verify that the user can edit an existing income transaction on the Edit Income Transaction page.
    Test Scenario: User Income 

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Income page.
    Click on the edit button for an existing transaction within a category.
    Verify that the user is redirected to the "Edit Income Transaction" page.
    Make changes to the transaction and submit the form.
    Verify that the changes are reflected in the selected category on the Income page.

Expected Results:
    The user can edit an existing income transaction on the Edit Income Transaction page.

Actual Results:
    The user can edit an existing income transaction on the Edit Income Transaction page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.3.7 User Reports Scenario ----------------------------------------------------------------

-- Test Case 53: Reports Page Layout and Design --
Description:
    Objective: Verify the layout and design of the Reports page.
    Test Scenario: User Reports

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Reports page.
    Verify that the path displayed is "Home/Reports".
    Check that the page has a form with a "from" date and a "to" date which can be submitted to regenerate a spending report.
    Verify the presence of the following sections on the page: Total Monthly Transactions, Ratio of Spending from Each Category, Largest Spending Category, Average Daily Spending, Categories Past and Close to Limit, Spending Categories Breakdown, and Income Categories Breakdown.

Expected Results:
    The layout and design of the Reports page match the described elements.

Actual Results:
    The layout and design of the Reports page match the described elements.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 54: Reports Page Functionality: Charts --
Description:
    Objective: Verify that the charts on the Reports page function correctly and display the correct information.
    Test Scenario: User Reports

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Reports page.
    Set a "from" date and a "to" date and submit the form.
    Verify that the page displays a chart showing total monthly transactions per month within the time period specified.
    Verify that the page displays a chart which shows the ratio of spending from each category for the time period specified.

Expected Results:
    The charts on the Reports page function correctly and display the correct information as described.

Actual Results:
    The charts on the Reports page function correctly and display the correct information as described.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 55: Reports Page Functionality: Spending and Income Categories Breakdown --
Description:
    Objective: Verify that the spending and income categories breakdown sections on the Reports page function correctly and display the correct information.
    Test Scenario: User Reports

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Reports page.
    Set a "from" date and a "to" date and submit the form.
    Verify that the page shows a spending categories breakdown section which is a list of categories where for every month any spending categories with spending are displayed.
    Click on a spending category and verify that it opens a dropdown for that spending category showing all the transactions in that spending category for that month.
    Check that each transaction is shown with the date it was made, its title, and the amount of that transaction.
    Verify that the page shows an income categories breakdown which is a list of categories where for every month any income categories with income are displayed.
    Check that the income category breakdown section works similarly to the spending category breakdown section.

Expected Results:
    The spending and income categories breakdown sections on the Reports page function correctly and display the correct information as described.

Actual Results:
    The spending and income categories breakdown sections on the Reports page function correctly and display the correct information as described.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 56: Reports Page Functionality: Additional Metrics --
Description:
    Objective: Verify that the additional metrics on the Reports page function correctly and display the correct information.
    Test Scenario: User Reports

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Reports page.
    Set a "from" date and a "to" date and submit the form.
    Check that the page shows the category with the largest total spending along with how much money was spent in that category.
    Verify that the page shows the average daily spending for the time period specified.
    Check that the page shows the number of categories past the limit per month on average.
    Verify that the page shows the number of categories close to the limit per month on average.

Expected Results:
    The additional metrics on the Reports page function correctly and display the correct information as described.

Actual Results:
    The additional metrics on the Reports page function correctly and display the correct information as described.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.3.8 User Friends Scenario ----------------------------------------------------------------

-- Test Case 57: Friends Page Layout and Design --
Description:
    Objective: Verify that the Friends page has the correct layout and design elements as described.
    Test Scenario: User Friends

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Friends page.
    Verify that the path displayed is "Home/Friends".
    Verify that the page has two tabs: "Search" and "My Profile".
    Click on the "Search" tab and verify that it has a title, list of user's friends, and a form to search for friends.
    Click on the "My Profile" tab and verify that it shows the user's profile as can be seen by other users.

Expected Results:
    The Friends page layout and design elements are correctly displayed as described.

Actual Results:
    The Friends page layout and design elements are correctly displayed as described.

Pass/Fail:
    Pass

Comments:
    [Any additional comments or observations]

-- Test Case 58: Friends Page Functionality --
Description:
Objective: Verify that the Friends page functions correctly and allows the user to search for friends, add and remove friends, and view profiles.
Test Scenario: User Friends

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Friends page.
    Click on the "Search" tab.
    Submit the search form with a valid search query.
    Verify that the user is presented with a list of users with similar names and options to add or remove friends as appropriate.
    Add a user as a friend and verify that the added user is now visible in the list of the user's friends.
    Click on the added user's name and verify that the user is taken to the added user's profile page.
    Remove the added user as a friend and verify that the user is removed from the list of the user's friends.

Expected Results:
    The Friends page functions correctly, allowing the user to search for friends, add and remove friends, and view profiles as described.

Actual Results:
    The user is able to search the user database for friends and can access their profiles. In the case of multiple users being shown to the user, when user tries to add a friend, the toggles for all users changes to "Remove".

Pass/Fail:
    [Fail]

Comments:
    The team has been aware of this issue and there have been attempts at trying to fix it. The leading theory for the reason of this bug is a problem with the interface between the template code and functional back end code.

4.3.9 User Leaderboard Scenario ----------------------------------------------------------------

-- Test Case 59: Leaderboard Page Functionality --
Description:
    Objective: Verify that the Leaderboard page functions correctly and displays the correct information.
    Test Scenario: Leaderboard Page

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Navigate to the Leaderboard page.
    Verify that the path displayed is "Home/Leaderboard".
    Check that the Leaderboard page displays the user's league, a podium with the names of the top three users from their league, and the number of points those users have.
    Verify that the leaderboard shows the top 10 players from the user's league. Each row should display the player's position, the first and last name of the user, and their number of points.
    If the user is not in the top 10, verify that they appear at the bottom of the leaderboard.

Expected Results:
    The Leaderboard page functions correctly and displays the correct information as described.

Actual Results:
    The Leaderboard page functions correctly and displays the correct information as described.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

4.3.10 User Logout Scenario ----------------------------------------------------------------

-- Test Case 60: Logout Functionality - Navigation Bar --
Description:
    Objective: Verify that the logout link in the navigation bar functions correctly and logs the user out.
    Test Scenario: User Logout

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Click on the "user account" icon in the navigation bar and select "log out" from the drop-down menu.
    Verify that the user is logged out and redirected to the home page.

Expected Results:
    The logout link in the navigation bar functions correctly, logging the user out and redirecting them to the login page.

Actual Results:
    The logout link in the navigation bar functions correctly, logging the user out and redirecting them to the login page.

Pass/Fail:
    [PASS]


Comments:
    [Any additional comments or observations]

-- Test Case 61: Logout Functionality - Side Bar --
Description:
    Objective: Verify that the logout link in the side bar functions correctly and logs the user out.
    Test Scenario: User Logout

Steps to Reproduce:
    Log in to the web application with valid credentials.
    Open the side bar and click on the "log out" link.
    Verify that the user is logged out and redirected to the home page.

Expected Results:
    The logout link in the side bar functions correctly, logging the user out and redirecting them to the login page.

Actual Results:
    The logout link in the side bar functions correctly, logging the user out and redirecting them to the login page.

Pass/Fail:
    [PASS]

Comments:
    [Any additional comments or observations]



5. Issues and Bugs
------------------

List of issues and bugs discovered during testing:

### Issue 1: Buggy add friend button on friends page

- Description: When user searches up a friend and multiple users appear, on clicking 'Add' for one user, all user 'Add' buttons change to "Remove"
- Severity: Medium
- Priority: High
- Status: In Progress
- Comments: Although this bug is not very severe, it can lead to a lot of confusion on the user side. Should be fixed as soon as possible. The source of the issue is still not clear.


6. Conclusion
-------------

In this test report, we have conducted a series of tests to verify the functionality and design of various pages within the web application. While all tests appear to pass, it is essential to acknowledge that this report is not exhaustive, and there may be gaps in our testing coverage. The tests conducted focused on specific scenarios, and some edge cases or unexpected user interactions were not considered.

One limitation of this test report is that only two testers formally conducted all of the tests. This may introduce bias and may have led to overlooking certain issues or inconsistencies. To improve the testing process, the testing process could involve multiple testers to provide diverse perspectives and identify potential problems more effectively. Increasing the number of browsers and operating systems used during testing would also make the results more reliable as some tests may have failed on different browsers.

Additionally, it would be beneficial to enhance the testing process by incorporating different testing methodologies, such as exploratory testing, stress testing, and security testing. This would help identify issues that may not be captured through the current test cases.

Moreover, automating some test cases using tools like Selenium could have helped streamline the testing process and ensure that regression tests are performed consistently, especially when new features are introduced or updates are made to the application.

In conclusion, while the current test report suggests that the web application is mostly functioning as intended, it is crucial to recognize that there may be gaps in the testing coverage.


