Title: Frontend Manual Testing Report
Project: Void Money Tracker
Date: [Date]
Tester(s): [Name(s) of testers]

1. Introduction
---------------

This front-end manual test report provides an overview of the testing conducted on the 'Void Money Tracker' web application. The primary goal of the Void Money Tracker is to help users track their spending by providing a platform that allows them to easily log transactions and view reports of their spending with limits, set by the user, applied to customisable categories. Additionally, the application incentivises users to use it by offering points for logging transactions and putting users against each other through a league system.

The purpose of the manual testing was to ensure that the application's front-end is functioning correctly and meeting the user's expectations. The report highlights the testing approach, methodology, and results. It also provides an analysis of the application's performance, usability, functionality, and user experience.

The report is intended to provide valuable insights to the development team and stakeholders, highlighting any issues discovered during the testing process and providing recommendations for improvement. It is essential to note that the report focuses solely on the front-end of the application, and back-end testing was not included.

Overall, this report aims to provide a comprehensive evaluation of the front-end of the money tracking web application, ensuring that it is user-friendly, efficient, and reliable.

2. Test Environment
-------------------

The tests in this report have been conducted on the following browsers and operating systems:
- Safari Version 15.6.1 (17613.3.9.1.16) with macOS Monterey Version 12.6.3 with a screen resolution of 2560px x 1600px

3. Test Scenarios
-----------------

For all test scenarios, the objectives of the Homepage also apply.

3.1 Scenarios before user is signed up to service

3.1.1 Homepage
- Verify the layout, design elements, and content
- Check the navigation menu and links
- Test responsiveness on different devices and screen resolutions

3.1.2 User Sign-Up Page
- Check the required fields and field validation
- Test the registration process including successful registration, error handling
- Verify the user receives a confirmation email
- Test the link to the login page
- Verify user is able to use friend referral code to sign up and points are awarded correctly

3.1.3 User Log-In Page
- Check the required fields and field validation
- Test the login process, including successful login, error handling
- Test the link to the registration page and password reset

3.2 Scenarios after user is signed up to service but not logged in

3.2.1 Reset Password Page
- Check the required fields and field validation
- Test the password reset request process, including successful request submission and error handling
- Verify the user receives a password reset email with a unique reset link

3.2.2 Reset Password Email
- Verify the email content, including subject, sender, and recipient
- Check the email contains a unique password reset link with a valid expiration time
- Test the password reset link by clicking on it and confirming it redirects to the Password Reset Confirm page

3.2.3 Reset Password Confirm Page
- Check the required fields and field validation (new password and password confirmation)
- Test the password reset process, including successful password reset, error handling, and expired reset link handling
- Verify the user is redirected to the Password Reset Complete page upon successful password reset

3.2.4 Password Reset Complete Page
- Check the presence of a confirmation message indicating a successful password reset
- Test the link to the login page and other related pages

3.3 Scenarios after user is logged into service

3.3.1 User Feed
- Verify user can easily add transactions using the quick add feauture
- Check the required fields and field validation for quick add feauture
- Test user can view a brief of notifications if any received
- Check that user can log out from service

3.3.2 User Spending
- Verify user can create, edit and delete relevant spending categories
- Verify user can create, view, edit and delete transaction in spending categories
- Check the required fields and field validation

3.3.3 User Income
- Verify user can create, edit and delete income categories
- Verify user can create, view, edit and delete transaction in income categories
- Check the required fields and field validation

3.3.4 User Reports
- Check the required fields and field validation
- Verify user can use fields provided to generate accurate reports

3.3.5 User Friends
- Check user can search for and add friends
- Verify user is able to see their Friends
- Check user can see their friends' profile

3.3.6 User Leaderboard
- Verify podium and leaderboard is accurate
- Check that user is able to see their position in the leaderboard

3.3.7 User profile
- Verify user is able to views and edit their profile
- Verify user can delete their account

3.3.8 User Settings
- Verify user can use toggles on settings to change their settings
- Verify user settings are updated and behave correctly


4. Test Cases and Results
-------------------------

Describe each test case in detail, including the steps to reproduce, expected results, and actual results. Use the following format for each test case:

### Test Case [ID]: [Test Case Title]

#### Description:

- Objective: [Briefly describe the objective of this test case]
- Test Scenario: [Associated Test Scenario]

#### Steps to Reproduce:

1. [Step 1]
2. [Step 2]
3. [Step 3]
...

#### Expected Results:

- [Expected result 1]
- [Expected result 2]
- [Expected result 3]
...

#### Actual Results:

- [Actual result 1]
- [Actual result 2]
- [Actual result 3]
...

#### Pass/Fail:

- [Pass/Fail]

#### Comments:

- [Any additional comments or observations]

5. Issues and Bugs
------------------

List any issues or bugs discovered during testing, along with their severity, priority, and status (e.g., Open, In Progress, Resolved). Use the following format for each issue:

### Issue [ID]: [Issue Title]

- Description: [Briefly describe the issue]
- Severity: [Low/Medium/High/Critical]
- Priority: [Low/Medium/High]
- Status: [Open/In Progress/Resolved]
- Comments: [Any additional comments or observations]

6. Conclusion
-------------

Provide a summary of the testing process, highlighting any major concerns, overall test results, and recommendations for improvements.

7. Attachments
--------------

Include any relevant attachments, such as screenshots, logs, or other files that support the test report.
